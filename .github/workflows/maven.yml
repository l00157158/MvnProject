# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Setting up working directory
      working-directory: demo
      run: pwd
    - name: Print Working Directory
      run: pwd
    - name: List directory contents
      run: ls -R
    - name: cleaning up and compiling
      run: mvn clean


    - name: Build with Maven
      run: mvn -B package --file demo/pom.xml
      
    - name: Confirm JAR is built
      run: ls -l demo/target/
    
    - name: Upload JAR for deploy job
      uses: actions/upload-artifact@v2
      with:
        name: demo-jar
        path: demo/target/demo-1.0-SNAPSHOT.jar

  # New job for sample test
  sample_test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Sample Test Step
      run: echo 'test success'
      
  deploy:
    needs: sample_test
    runs-on: ubuntu-latest
    steps:
    - name: Download JAR for deploy job
      uses: actions/download-artifact@v2
      with:
        name: demo-jar
        path: demo/target

    - name: Copy Artifact to EC2
      run: |
        echo "${{secrets.MVN_PRJ_KEY_PVT}}" > deploy_key.pem
        chmod 600 deploy_key.pem
        scp -o StrictHostKeyChecking=no -i deploy_key.pem demo/target/demo-1.0-SNAPSHOT.jar ubuntu@54.89.10.92:/home/ubuntu/mvnprj/demo-1.0-SNAPSHOT.jar
      # scp -o StrictHostKeyChecking=no -i deploy_key.pem javasample.jar ubuntu@54.89.10.92:/home/ubuntu/mvnprj/javasample.jar
      
    - name: Restart Application on EC2 
      run: |
         echo "${{secrets.MVN_PRJ_KEY_PVT}}" > deploy_key.pem
         chmod 600 deploy_key.pem
         ssh -o StrictHostKeyChecking=no -i deploy_key.pem ubuntu@54.89.10.92 'bash /home/ubuntu/restart.sh'
   # ssh -o StrictHostKeyChecking=no ubuntu@54.89.10.92 'bash /home/ubuntu/restart.sh'



    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #  - name: Update dependency graph  
     # uses:  advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6 
